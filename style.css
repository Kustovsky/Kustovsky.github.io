body {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #282828;
    color: #ebdbb2;
    margin: 0;
    padding: 0;
    font-family: 'Lato', sans-serif;
    font-weight: 300;
}

#mw {
    display:flex;
    flex-direction: column;
    align-items:center;
    justify-content:center;
    position: relative;
}

main {
    top: 50%;
    right: 0;
    left: 0;
    width: 100%;
    max-width: 310px;
    transform: translateY(-100px);
    text-align: center;
}

.time {
    text-align:center;
    margin-bottom: 20px;
    font-size: 4.5rem;
    letter-spacing: 6px;
}

input{
    border: 0;
    outline: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    box-sizing: border-box;
    padding: 12px;
    transition: 0.5s;
    border-radius: 2px;
    background-color: inherit;
    color: inherit;
    font-size: 2rem;
    font-family: inherit;
    font-weight: inherit;
    text-align:center;
}

aside[data-toggled='true'] {
    transform: translateX(0);
}

h1 {
    line-height: 1rem;
}

.main{
	margin: 100px;
}

select, option{
  border: 0;
  outline: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  background-color: inherit;
  color: inherit;
}

ul{
  list-style: none;
  margin: 5;
}
.main li {
  color: #fb3934;

}
.main li a:hover {
  color: inherit;
  -webkit-transition: all 0.2s ease-out;
  -moz-transition: all 0.2s ease-out;
  -o-transition: all 0.2s ease-out;
  transition: all 0.2s ease-out;
}

a {
  color: #ebdbb2;
  text-decoration: none;
  display: block;
  float: none;
}

li{
   -webkit-box-sizing: border-box;
   -moz-box-sizing: border-box;
   box-sizing: border-box;

   float   : left;
   width   : 25%;
   padding : 5px; /* this will be applied internally, due to 
                      box-sizing property */

}

#thispage {
	padding-top: 200px;
}


html {
  height: 100%;
}

body {
  background: #222222;
  box-shadow: inset 0 0 400px #111111;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.rain {
  background: white;
  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, #ffffff 100%);
  height: 50px;
  position: absolute;
  width: 1px;
}

$rain: 150;

@for $i from 1 through $rain {
  $top: (random(50) + 50) * 1%;
  $left: random(100) * 1%;
  $opacity: (random(30) + 30) * 0.01;
  $delay: random(20) - 1s;

  .rain:nth-of-type(#{$i}) {
    animation-name: rain-#{$i};
    animation-delay: $delay;
    animation-duration: random(6) + 4s;
    animation-iteration-count: infinite;
    left: $left;
    opacity: $opacity;
    top: -$top;
  }

  @Keyframes rain-#{$i} {
    0% {
      left: $left;
      opacity: $opacity;
      top: -$top;
    }
    100% {
      opacity: 0;
      top: $top + 40%;
    }
  }
}
